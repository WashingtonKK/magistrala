version: v1.0
name: CI Pipeline
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004

auto_cancel:
  running:
    when: "branch != 'master'"

blocks:
  - name: Test Bootstrap
    dependencies: []
    run:
      when: change_in('/bootstrap/')
    task:
      jobs:
        - commands:
            - checkout
            - cd bootstrap
            - go test -v -coverprofile=coverage.out ./...
            - go tool cover -html=coverage.out -o coverage.html 
          name: Test Bootstrap
  - name: Test certs
    dependencies: []
    run:
      when: change_in('/certs/')
    task:
      jobs:
        - commands:
            - checkout
            - cd certs
            - go test -v -coverprofile=coverage.out ./...
            - go tool cover -html=coverage.out -o coverage.html 
          name: Test certs
  - name: Test http
    dependencies: []
    run:
      when: change_in('/http/')
    task:
      jobs:
        - commands:
            - checkout
            - cd http/api
            - go test -v -coverprofile=coverage.out
            - go tool cover -html=coverage.out -o coverage.html 
          name: Test http
  - name: Test logger
    dependencies: []
    run:
      when: change_in('/logger/')
    task:
      jobs:
        - commands:
            - checkout
            - cd logger
            - go test -v -coverprofile=coverage.out ./...
            - go tool cover -html=coverage.out -o coverage.html 
          name: Logger test
  - name: Test consumers
    dependencies: []
    run:
      when: change_in('/consumers/')
    task:
      jobs:
        - commands:
            - checkout
            - cd consumers
            - go test -v -coverprofile=coverage.out ./...
            - go tool cover -html=coverage.out -o coverage.html 
          name: Consumers test          
  - name: Test all
    dependencies:
      - Lint
    run:
      when: "branch = 'master'"
    task:
      jobs:
        - commands:
            - checkout
            - make test
          name: All test

  - name: Test lora
    dependencies: []
    run:
      when: change_in('/lora/')
    task:
      jobs:
        - commands:
            - checkout
            - cd lora
            - go test -v -coverprofile=coverage.out
            - go tool cover -html=coverage.out -o coverage.html 
          name: Test lora
  - name: Test mqtt
    dependencies: []
    run:
      when: change_in('/mqtt/')
    task:
      jobs:
        - commands:
            - checkout
            - cd mqtt
            - go test -v -coverprofile=coverage.out
            - go tool cover -html=coverage.out -o coverage.html 
          name: Mqtt test
  - name: Test things
    dependencies: []
    run:
      when: change_in('/things/')
    task:
      jobs:
        - commands:
            - checkout
            - cd things/
            - go test -v -coverprofile=coverage.out ./...
            - go tool cover -html=coverage.out -o coverage.html 
          name: Test things
  - name: Test users
    dependencies: []
    run:
      when: change_in('/users/')
    task:
      jobs:
        - commands:
            - checkout
            - go test -v -coverprofile=coverage.out ./...
            - go tool cover -html=coverage.out -o coverage.html 
          name: Test users
  - name: Test twins
    dependencies: []
    run:
      when: change_in('/twins/')
    task:
      jobs:
        - commands:
            - checkout
            - cd twins/
            - go test -v -coverprofile=coverage.out ./...
            - go tool cover -html=coverage.out -o coverage.html            
          name: Test twins
  - name: Test ws
    dependencies: []
    run:
      when: change_in('/ws/')
    task:
      jobs:
        - commands:
            - checkout
            - cd ws/
            - go test -v -coverprofile=coverage.out ./...
            - go tool cover -html=coverage.out -o coverage.html            
          name: Test ws
  - name: Lint
    dependencies: []
    task:
      jobs:
        - name: Linting
          commands:
            - |
              function version_gt() {
                test "$(printf ''%s\n'' "$@" | sort -V | head -n 1)" != "$1"
              }
            - export GOBIN=$HOME/go/bin
            - 'export PATH=$PATH:$GOBIN'
            - checkout
            - 'curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOBIN) $GOLANGCI_LINT_VERSION'
            - 'golangci-lint run --no-config --disable-all --enable gosimple,errcheck,govet,unused,goconst,godot --timeout 3m'
          name: Lint
      prologue:
        commands:
          - GOLANGCI_LINT_VERSION=v1.52.1
  - name: Integration tests
    dependencies:
      - Test http
      - Test certs
      - Test users
      - Test ws
      - Test twins
      - Test things
      - Test lora
      - Test Bootstrap
      - Test logger
      - Test mqtt
    run:
      when: 'change_in([''/http/'', ''/certs/'', ''/things/'', ''/users/''])'
    task:
      jobs:
        - commands:
            - checkout
            - make all
            - make install
            - make dockers
            - make test
          name: integration test

